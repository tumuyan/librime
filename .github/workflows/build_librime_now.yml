name: Build Librime Now

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      os:
        description: 'Compile librime in what OS'
        required: false
        default: windows          
        type: choice
        options:
        - linux
        - windows
        - macos
        - all 
      test:
        description: 'Unit test'
        required: false
        default: 'true'          
        type: choice
        options:
        - 'true'
        - 'false'
      newcode:
        description: 'Compile librime from env REPO_URL(not your repository)'
        required: false
        default: 'false'
      password:
        description: 'webdav password'
        required: false
        default: ''
env:
  REPO_URL: https://github.com/rime/librime
  REPO_BRANCH: master
  DAV_USER: tumuyan
  DAV_PATH: https://kita.teracloud.jp/dav/librime/


#curl --user 账户名:密码 -T 文件名 https://www.linuxidc.com:443/dir --trace-ascii goo.txt
jobs:
  linux:
    runs-on: ubuntu-latest
    if: (github.event.inputs.os != 'windows' && github.event.inputs.os != 'macos')
    strategy:
      fail-fast: false
      matrix:
        compiler: [g++, clang]
    steps:
      - name: Checkout last commit
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: "recursive"

      - name: Install dependency
        run:  |
          uname -a
          echo os: ${{matrix.os}}
          echo node: ${{matrix.node}}
          echo compiler: ${{matrix.compiler}}
          ./action-install-linux.sh


      - name: Unit test
        run: make test   
        if: (github.event.inputs.test  == 'true')

      - name: Make thirdparty
        run: make thirdparty    
        if: (github.event.inputs.test  != 'true')
        
      - name: Make
        run: make      
        if: (github.event.inputs.test  != 'true')
      
      - name: Upload Linux artifact
        uses: actions/upload-artifact@v3
        with:
          name: librime_linux_${{matrix.compiler}}
          path: build
          # keep 90 days
          retention-days: 90
        if: (github.event.inputs.test  != 'true')
          
      - name: Upload Linux thirdparty artifact
        uses: actions/upload-artifact@v3
        with:
          name: librime_thirdparty_linux_${{matrix.compiler}}
          path: thirdparty/lib
          # keep 90 days
          retention-days: 90
        if: (github.event.inputs.test  != 'true')
          
      - name: Upload Linux bin artifact
        uses: actions/upload-artifact@v3
        with:
          name: librime_bin_linux_${{matrix.compiler}}
          path: build/bin
          # keep 90 days
          retention-days: 90

      - name: Upload Webdav with secrets
        run:  |
          sudo apt-get install curl
          cd $GITHUB_WORKSPACE
          tar -zcvf bin-$(date +%Y%m%d-%H%M).tar.gz build/bin
          curl --user $DAV_USER:${{ secrets.LIBRIME_WEBDAV}} -T bin* $DAV_PATH
        if: (github.event.inputs.password == '')
      - name: Upload Webdav
        run:  |
          sudo apt-get install curl
          # curl --user $DAV_USER:${{ github.event.inputs.password }} -T build/bin $DAV_PATH
          # curl --user tumuyan:tumuyantm -T bin*  https://kita.teracloud.jp/dav/librime-x/
          cd $GITHUB_WORKSPACE
          tar -zcvf bin-$(date +%Y%m%d-%H%M).tar.gz build/bin
          ls bin*
          curl --user $DAV_USER:${{ github.event.inputs.password }} -T bin* $DAV_PATH
        if: (github.event.inputs.password != '')
        
  macos:
    runs-on: macos-latest
    if: (github.event.inputs.os != 'windows' && github.event.inputs.os != 'linux')
    env:
      boost_version: 1.78.0
      BOOST_ROOT: ${{ github.workspace }}/thirdparty/src/boost_1_78_0
    steps:
      - name: Checkout last commit
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: "recursive"

      - name: Cache Boost
        id: cache-boost
        uses: actions/cache@v3
        with:
          path: |
            ${{ env.BOOST_ROOT }}.tar.bz2
            ${{ env.BOOST_ROOT }}/stage
          key: ${{ runner.os }}-boost-${{ env.boost_version }}

      - name: Extract Boost source tarball
        if: steps.cache-boost.outputs.cache-hit == 'true'
        run: |
          pushd thirdparty/src
          tar --bzip2 -xf ${{ env.BOOST_ROOT }}.tar.bz2
          popd

      - name: Install Boost
        if: steps.cache-boost.outputs.cache-hit != 'true'
        run: ./install-boost.sh

      - name: Check submodules
        run: git submodule > submodule-status

      - name: Cache thirdparty
        id: cache-thirdparty
        uses: actions/cache@v3
        with:
          path: |
            thirdparty/bin
            thirdparty/include
            thirdparty/lib
            thirdparty/share
          key: ${{ runner.os }}-thirdparty-${{ hashFiles('submodule-status') }}

      - name: Build thirdparty
        if: steps.cache-thirdparty.outputs.cache-hit != 'true'
        run: make xcode/thirdparty

      - name: Install Rime plugins
        run: ./action-install-plugins-macos.sh

      - name: Unit test
        run: make xcode/test
        if: (github.event.inputs.test  == 'true')

      - name: Upload artifactory
        run: |
          make xcode/dist
          echo TODO
  windows:
    runs-on: windows-latest
    if: (github.event.inputs.os != 'macos' && github.event.inputs.os != 'linux')
    env:
      boost_version: 1.78.0
      BOOST_ROOT: ${{ github.workspace }}\thirdparty\src\boost_1_78_0
    steps:
      - name: Checkout last commit
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: "recursive"

      - name: Configure build environment
        run: copy env.vs2022.bat env.bat

      - name: Cache Boost
        id: cache-boost
        uses: actions/cache@v3
        with:
          path: |
            ${{ env.BOOST_ROOT }}.7z
            ${{ env.BOOST_ROOT }}\stage
          key: ${{ runner.os }}-boost-${{ env.boost_version }}

      - name: Extract Boost source tarball
        if: steps.cache-boost.outputs.cache-hit == 'true'
        run: |
          pushd thirdparty\src
          7z x ${{ env.BOOST_ROOT }}.7z
          popd

      - name: Install Boost
        if: steps.cache-boost.outputs.cache-hit != 'true'
        run: .\install-boost.bat

      - name: Check submodules
        run: git submodule > submodule-status

      - name: Cache thirdparty
        id: cache-thirdparty
        uses: actions/cache@v3
        with:
          path: |
            thirdparty\bin
            thirdparty\include
            thirdparty\lib
            thirdparty\share
          key: ${{ runner.os }}-thirdparty-${{ hashFiles('submodule-status') }}

      - name: Build thirdparty
        if: steps.cache-thirdparty.outputs.cache-hit != 'true'
        run: .\build.bat thirdparty

      - name: Install Rime plugins
        run: .\action-install-plugins-windows.bat

      - name: Unit test
        run: .\build.bat test
        if: (github.event.inputs.test  == 'true')

      - name: Build 
        run: .\build.bat
        if: (github.event.inputs.test  != 'true')
 
      - name: Copy lib
        run: |
          copy build\lib\Release\rime.dll build\bin\
          move build\bin\Release\*.exe build\bin\

      - name: Upload Win artifact
        uses: actions/upload-artifact@v3
        with:
          name: librime_win
          path: build\bin
          # keep 90 days
          retention-days: 90
          
      # - name: Upload Win thirdparty artifact
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: librime_win_thirdparty
      #     path: thirdparty\lib
      #     # keep 90 days
      #     retention-days: 90
